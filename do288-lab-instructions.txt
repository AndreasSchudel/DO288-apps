
----------------------------------------------------------------------
lab trigger-builds start

source /usr/local/etc/ocp4.config

oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-trigger-builds

podman login -u ${RHT_OCP4_QUAY_USER} quay.io


cd /home/student/DO288/labs/trigger-builds
skopeo copy docker-archive:php-70-rhel7-original.tar.gz docker://quay.io/${RHT_OCP4_QUAY_USER}/php-70-rhel7:latest

oc create secret generic quay-registry --from-file .dockerconfigjson=${XDG_RUNTIME_DIR}/containers/auth.json --type kubernetes.io/dockerconfigjson
oc secrets link builder quay-registry

oc import-image php --from quay.io/${RHT_OCP4_QUAY_USER}/php-70-rhel7 --confirm

oc new-app --as-deployment-config --name trigger php~http://github.com/${RHT_OCP4_GITHUB_USER}/DO288-apps --context-dir trigger-builds

oc logs -f bc/trigger
oc get pods

oc describe bc/trigger | grep Triggered

skopeo copy docker-archive:php-70-rhel7-newer.tar.gz docker://quay.io/${RHT_OCP4_QUAY_USER}/php-70-rhel7:latest

oc import-image php

oc get builds
oc describe build trigger-2 | grep cause

cd ~
skopeo delete docker://quay.io/${RHT_OCP4_QUAY_USER}/php-70-rhel7

lab trigger-builds finish
----------------------------------------------------------------------


----------------------------------------------------------------------
lab post-commit start
-> does not work
lab post-commit finish
----------------------------------------------------------------------


----------------------------------------------------------------------
lab build-app start

source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-build-app

cat ~/DO288/labs/build-app/oc-new-app.sh
~/DO288/labs/build-app/oc-new-app.sh

oc logs -f bc/simple
oc set env bc simple --list
oc set env bc simple npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/nodejs
oc set env bc simple --list
oc start-build simple -F

oc expose svc simple
oc get route/simple -o jsonpath='{.spec.host}{"\n"}'

oc get pods
curl simple-${RHT_OCP4_DEV_USER}-build-app.${RHT_OCP4_WILDCARD_DOMAIN}

oc describe bc simple
oc get bc simple -o jsonpath="{.spec.triggers[*].generic.secret}{'\n'}"
curl -X POST -k ${RHT_OCP4_MASTER_API}/apis/build.openshift.io/v1/namespaces/${RHT_OCP4_DEV_USER}-build-app/buildconfigs/simple/webhooks/ZYIdgpeyyL6P_Jwxn4Cs/generic

oc get builds
oc logs -f bc/simple
oc get pods

lab build-app grade
oc delete project ${RHT_OCP4_DEV_USER}-build-app
lab build-app finish
----------------------------------------------------------------------

----------------------------------------------------------------------
lab s2i-scripts start

sudo podman run --name test -it rhscl/httpd-24-rhel7 bash

cat /usr/libexec/s2i/assemble
cat /usr/libexec/s2i/run
cat /usr/libexec/s2i/usage

cd DO288-apps
git checkout master

cat /home/student/DO288-apps/s2i-scripts/index.html
ls -l /home/student/DO288-apps/s2i-scripts/.s2i/bin
cat /home/student/DO288-apps/s2i-scripts/.s2i/bin/assemble
cat /home/student/DO288-apps/s2i-scripts/.s2i/bin/run

source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}

oc new-project ${RHT_OCP4_DEV_USER}-s2i-scripts
oc new-app --as-deployment-config --name bonjour httpd:2.4~https://github.com/${RHT_OCP4_GITHUB_USER}/DO288-apps --context-dir s2i-scripts

oc logs -f bc/bonjour

oc get pods
oc expose svc bonjour
oc get route
curl http://bonjour-${RHT_OCP4_DEV_USER}-s2i-scripts.${RHT_OCP4_WILDCARD_DOMAIN}
curl http://bonjour-${RHT_OCP4_DEV_USER}-s2i-scripts.${RHT_OCP4_WILDCARD_DOMAIN}/info.html

oc logs bonjour-1-z627m

cd ~
oc delete project ${RHT_OCP4_DEV_USER}-s2i-scripts
sudo podman rm test

lab s2i-scripts finish
----------------------------------------------------------------------

----------------------------------------------------------------------
lab apache-s2i start

s2i version
s2i create s2i-do288-httpd s2i-do288-httpd
tree -a s2i-do288-httpd

cat ~/DO288/labs/apache-s2i/Dockerfile
cp ~/DO288/labs/apache-s2i/Dockerfile ~/s2i-do288-httpd/
cp -Rv ~/DO288/labs/apache-s2i/s2i ~/s2i-do288-httpd/
rm -f ~/s2i-do288-httpd/s2i/bin/save-artifacts
cd s2i-do288-httpd
sudo podman build -t s2i-do288-httpd .

sudo podman images
cat ~/DO288/labs/apache-s2i/index.html 
cp ~/DO288/labs/apache-s2i/index.html ~/s2i-do288-httpd/test/test-app/

mkdir /home/student/s2i-sample-app
s2i build test/test-app/ s2i-do288-httpd s2i-sample-app --as-dockerfile ~/s2i-sample-app/Dockerfile

cd ~/s2i-sample-app
tree .

cat Dockerfile
sudo podman build --format docker -t s2i-sample-app .
sudo podman images
sudo podman run --name test -u 1234 -p 8080:8080 -d s2i-sample-app
sudo podman ps

curl http://localhost:8080
sudo podman stop test

source /usr/local/etc/ocp4.config
sudo podman login -u ${RHT_OCP4_QUAY_USER} quay.io

sudo skopeo copy containers-storage:localhost/s2i-do288-httpd docker://quay.io/${RHT_OCP4_QUAY_USER}/s2i-do288-httpd

oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-apache-s2i

podman login -u ${RHT_OCP4_QUAY_USER} quay.io

oc create secret generic quayio --from-file .dockerconfigjson=${XDG_RUNTIME_DIR}/containers/auth.json --type=kubernetes.io/dockerconfigjson

oc secrets link builder quayio
oc import-image s2i-do288-httpd --from quay.io/${RHT_OCP4_QUAY_USER}/s2i-do288-httpd --confirm

oc get is
oc new-app --as-deployment-config --name hello-s2i s2i-do288-httpd~https://github.com/${RHT_OCP4_GITHUB_USER}/DO288-apps --context-dir=html-helloworld

oc logs -f bc/hello-s2i
oc get pods
oc expose svc hello-s2i
oc get route/hello-s2i -o jsonpath='{.spec.host}{"\n"}'
curl http://hello-s2i-${RHT_OCP4_DEV_USER}-apache-s2i.${RHT_OCP4_WILDCARD_DOMAIN}

oc delete project ${RHT_OCP4_DEV_USER}-apache-s2i
sudo podman rm test
sudo podman rmi -f localhost/s2i-sample-app localhost/s2i-do288-httpd registry.access.redhat.com/ubi8/ubi:8.0
sudo skopeo delete docker://quay.io/${RHT_OCP4_QUAY_USER}/s2i-do288-httpd:latest
podman logout

lab apache-s2i finish
----------------------------------------------------------------------

----------------------------------------------------------------------
lab custom-s2i start

vi ~/DO288/labs/custom-s2i/Dockerfile
COPY ./s2i/bin/ /usr/libexec/s2i

cd ~/DO288/labs/custom-s2i
sudo podman build -t s2i-do288-go .
sudo podman images

mkdir /home/student/s2i-go-app
s2i build test/test-app/ s2i-do288-go s2i-go-app --as-dockerfile /home/student/s2i-go-app/Dockerfile
cd ~/s2i-go-app
sudo podman build -t s2i-go-app .
sudo podman images

sudo podman run --name go-test -u 1234  -p 8080:8080 -d s2i-go-app
sudo podman ps
curl http://localhost:8080/user1
sudo podman stop go-test

source /usr/local/etc/ocp4.config
sudo podman login -u ${RHT_OCP4_QUAY_USER} quay.io
sudo skopeo copy containers-storage:localhost/s2i-do288-go docker://quay.io/${RHT_OCP4_QUAY_USER}/s2i-do288-go

oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-custom-s2i
podman login -u ${RHT_OCP4_QUAY_USER} quay.io
oc create secret generic quayio --from-file .dockerconfigjson=${XDG_RUNTIME_DIR}/containers/auth.json --type=kubernetes.io/dockerconfigjson
oc secrets link builder quayio
oc import-image s2i-do288-go --from quay.io/${RHT_OCP4_QUAY_USER}/s2i-do288-go --confirm
oc get is

cd DO288-apps
git checkout master

git checkout -b custom-s2i
git push -u origin custom-s2i
cd ~

oc new-app --as-deployment-config --name greet s2i-do288-go~https://github.com/${RHT_OCP4_GITHUB_USER}/DO288-apps#custom-s2i --context-dir=go-hello

oc logs -f bc/greet
oc get pods
oc expose svc greet
oc get route/greet -o jsonpath='{.spec.host}{"\n"}'
curl http://greet-${RHT_OCP4_DEV_USER}-custom-s2i.${RHT_OCP4_WILDCARD_DOMAIN}/user1

mkdir -p ~/DO288-apps/go-hello/.s2i/bin
cp ~/DO288/labs/custom-s2i/s2i/bin/run ~/DO288-apps/go-hello/.s2i/bin/

vi ~/DO288-apps/go-hello/.s2i/bin/run
-> exec /opt/app-root/app --lang es

cd ~/DO288-apps/go-hello
git add .
git commit -m "Customized run script"
git push
cd ~

oc start-build greet
oc logs -f bc/greet
oc get pods
curl http://greet-${RHT_OCP4_DEV_USER}-custom-s2i.${RHT_OCP4_WILDCARD_DOMAIN}/user1

lab custom-s2i grade

oc delete project ${RHT_OCP4_DEV_USER}-custom-s2i
sudo podman rm go-test
sudo podman rmi -f localhost/s2i-go-app localhost/s2i-do288-go registry.access.redhat.com/ubi8/ubi:8.0
sudo skopeo delete docker://quay.io/${RHT_OCP4_QUAY_USER}/s2i-do288-go:latest

lab custom-s2i finish
----------------------------------------------------------------------

----------------------------------------------------------------------
----------------------------------------------------------------------




